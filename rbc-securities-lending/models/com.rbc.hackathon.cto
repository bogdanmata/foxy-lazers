/**
 * Write your model definitions here
 */

namespace com.rbc.hackathon

/**
 * The status of a secLending
 */
enum SecurityLandingContractStatus {
  o REQUESTED
  o RESPONDED
  o ACCEPTED
  o REJECTED 
  o EXPIRED
  o ACTIVE  
  o ENDED
}

enum FeesFrequency {
  o AT_CONTRACT_END
  o SEC_10
  o SEC_20
  o SEC_30
}

/**
 * An abstract participant type in this business network
 */
abstract participant BusinessUser identified by name {
  o String name
  o Double accountBalance
  o PortfolioItem[] portfolio
}

participant Bank extends BusinessUser {
}

participant Borrower extends BusinessUser {
}

concept PortfolioItem {
  o Double quantity
  --> Instrument instrument
 } 

abstract asset Instrument identified by isin {
  o String isin
  o String description
}

asset Bond extends Instrument {
}

abstract asset Collateral identified by id {
  o String id
}

asset CollateralCash extends Collateral {
  o Double amount
}

asset SecurityLandingContract identified by id {
  o String id
  o String startDate
  o String endDate
  o Double quantity
  o Collateral collateral
  o SecurityLandingContractStatus status
  o Double fees
  o FeesFrequency feesFrequency 
  --> Instrument instrument
  --> Bank bank
  --> Borrower borrower
}
asset SecurityLandingOffer identified by id {
  o String id
  o String expirationDate
  o Double fees
  o FeesFrequency feesFrequency 
  --> SecurityLandingContract securityLandingContract
  --> Bank bank
}

transaction LendingRequest {
  o String startDate
  o String endDate
  o Double quantity
  --> Instrument instrument
  --> Borrower borrower
}
transaction LendingOffer {
  o String expirationDate
  o Double fees
  o FeesFrequency feesFrequency 
  --> SecurityLandingContract securityLandingContract
  --> Bank bank
}
transaction LendingOfferAgreement {
  --> SecurityLandingOffer securityLandingOffer
}

/**
 * JUST FOR INITIALIZING A DEMO
 */
transaction SetupDemo {
}